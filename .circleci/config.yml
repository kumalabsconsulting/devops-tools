version: 2.1

jobs:
############ debian WORKSPACE ###############
  build_debian:

    docker:
      - image: cimg/base:2022.11
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Debian Docker image
          environment:
            MYTAG: 0.2
            DOCKER_REPO: redbeard28/debian-workspace
          command: |
            pwd
            ls -l
            TOKEN=$( curl -sSLd "username=${DOCKERHUB_USER}&password=${DOCKERHUB_PASSWORD}" https://hub.docker.com/v2/users/login | jq -r ".token" )
            STATUS=$( curl -sH "Authorization: JWT $TOKEN" "https://hub.docker.com/v2/repositories/${DOCKER_REPO}/tags/${MYTAG}/" | jq -r ".tag_status" )
            echo $STATUS
            if [ $STATUS == "active" ]; then
              
              echo "#######@ NOTHING TO DO #####"
              exit 0
            fi
            if [ "${CIRCLE_BRANCH}" == "main" ]; then
              cd debian-workspace
              docker build -t ${DOCKER_REPO}:$MYTAG .
              if [ $? == 0 ];then
                echo $DOCKERHUB_PASSWORD | docker login -u ${DOCKERHUB_USER} --password-stdin
                docker push ${DOCKER_REPO}:$MYTAG
              fi
            fi
############ END debian WORKSPACE ###############
#
############ debian WORKSPACE ###############
  build_base:
    docker:
      - image: cimg/base:2022.11
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build base Docker image
          environment:
            MYTAG: 0.2
            DOCKER_REPO: redbeard28/base-devspace
          command: |
            TOKEN=$( curl -sSLd "username=${DOCKERHUB_USER}&password=${DOCKERHUB_PASSWORD}" https://hub.docker.com/v2/users/login | jq -r ".token" )
            STATUS=$( curl -sH "Authorization: JWT $TOKEN" "https://hub.docker.com/v2/repositories/${DOCKER_REPO}/tags/${MYTAG}/" | jq -r ".tag_status" )
            echo $STATUS
            if [ $STATUS == "active" ]; then
              
              echo "#######@ NOTHING TO DO #####"
              exit 0
            fi
            if [ "${CIRCLE_BRANCH}" == "main" ]; then
              cd base-devspace
              docker build -t ${DOCKER_REPO}:$MYTAG .
              if [ $? == 0 ];then
                echo $DOCKERHUB_PASSWORD | docker login -u ${DOCKERHUB_USER} --password-stdin
                docker push ${DOCKER_REPO}:$MYTAG
              fi
            fi
############ END base WORKSPACE ###############
#
############ codeserver WORKSPACE ###############
  build_codeserver:
    docker:
      - image: cimg/base:2022.11
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build application Docker image
          environment:
            MYTAG: 0.2
            DOCKER_REPO: redbeard28/codeserver-workspace
          command: |
            TOKEN=$( curl -sSLd "username=${DOCKERHUB_USER}&password=${DOCKERHUB_PASSWORD}" https://hub.docker.com/v2/users/login | jq -r ".token" )
            STATUS=$( curl -sH "Authorization: JWT $TOKEN" "https://hub.docker.com/v2/repositories/${DOCKER_REPO}/tags/${MYTAG}/" | jq -r ".tag_status" )
            echo $STATUS
            if [ $STATUS == "active" ]; then
              
              echo "#######@ NOTHING TO DO #####"
              exit 0
            fi
            if [ "${CIRCLE_BRANCH}" == "main" ]; then
              cd codeserver-workspace
              docker build -t ${DOCKER_REPO}:$MYTAG .
              if [ $? == 0 ];then
                echo $DOCKERHUB_PASSWORD | docker login -u ${DOCKERHUB_USER} --password-stdin
                docker push ${DOCKER_REPO}:$MYTAG
              fi
            fi
#
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build_debian:
          filters:
            branches:
              only: main
      - build_base:
          requires:
            - build_debian
          filters:
            branches:
              only: main
      - build_codeserver:
          requires:
            - build_debian
            - build_base
          filters:
            branches:
              only: main