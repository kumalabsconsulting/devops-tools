version: 2.1

jobs:
############ debian WORKSPACE ###############
  build_debian:
    working_directory: ~/debian-workspace
    docker:
      - image: cimg/base:2022.11
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout:
          path: $CIRCLE_WORKING_DIRECTORY
      - setup_remote_docker
      - run:
          name: Build Debian Docker image
          environment:
            MYTAG: 0.2
            DOCKER_REPO: redbeard28/debian-workspace
          command: |
            TOKEN=$( curl -sSLd "username=${DOCKERHUB_USER}&password=${DOCKERHUB_PASSWORD}" https://hub.docker.com/v2/users/login | jq -r ".token" )
            STATUS=$( curl -sH "Authorization: JWT $TOKEN" "https://hub.docker.com/v2/repositories/${DOCKER_REPO}/tags/${MYTAG}/" | jq -r ".tag_status" )
            echo $STATUS
            if [ $STATUS == "active" ]; then
              
              echo "#######@ NOTHING TO DO #####"
              exit 0
            else if [ -z $STATUS]
              if [ "${CIRCLE_BRANCH}" == "main" ]; then
                cd $CIRCLE_WORKING_DIRECTORY
                docker build -t ${DOCKER_REPO}:$MYTAG .
              fi
            fi
#
#
  deploy_debian:
    working_directory: ~/debian-workspace
    docker:
      - image: cimg/base:2022.11
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout:
          path: $CIRCLE_WORKING_DIRECTORY
      - setup_remote_docker
      - run:
          name: Deploy Debian Docker image
          environment:
            MYTAG: 0.2
            DOCKER_REPO: redbeard28/debian-workspace
          command: |
            TOKEN=$( curl -sSLd "username=${DOCKERHUB_USER}&password=${DOCKERHUB_PASSWORD}" https://hub.docker.com/v2/users/login | jq -r ".token" )
            STATUS=$( curl -sH "Authorization: JWT $TOKEN" "https://hub.docker.com/v2/repositories/${DOCKER_REPO}/tags/${MYTAG}/" | jq -r ".tag_status" )
            echo $STATUS
            if [ $STATUS == "active" ]; then
              
              echo "#######@ NOTHING TO DO #####"
              exit 0
            else if [ -z $STATUS]
              if [ "${CIRCLE_BRANCH}" == "main" ]; then
                echo $DOCKERHUB_PASSWORD | docker login -u ${DOCKERHUB_USER} --password-stdin
                docker push ${DOCKER_REPO}:$MYTAG
              fi
            fi
############ END debian WORKSPACE ###############

############ debian WORKSPACE ###############
  build_base:
    working_directory: ~/base-devspace
    docker:
      - image: cimg/base:2022.11
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout:
          path: $CIRCLE_WORKING_DIRECTORY
      - setup_remote_docker
      - run:
          name: Build base Docker image
          environment:
            MYTAG: 0.2
            DOCKER_REPO: redbeard28/base-devspace
          command: |
            TOKEN=$( curl -sSLd "username=${DOCKERHUB_USER}&password=${DOCKERHUB_PASSWORD}" https://hub.docker.com/v2/users/login | jq -r ".token" )
            STATUS=$( curl -sH "Authorization: JWT $TOKEN" "https://hub.docker.com/v2/repositories/${DOCKER_REPO}/tags/${MYTAG}/" | jq -r ".tag_status" )
            echo $STATUS
            if [ $STATUS == "active" ]; then
              
              echo "#######@ NOTHING TO DO #####"
              exit 0
            else if [ -z $STATUS]
              if [ "${CIRCLE_BRANCH}" == "main" ]; then
                cd $CIRCLE_WORKING_DIRECTORY
                docker build -t ${DOCKER_REPO}:$MYTAG .
              fi
            fi
#
#
  deploy_base:
    working_directory: ~/base-devspace
    docker:
      - image: cimg/base:2022.11
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout:
          path: $CIRCLE_WORKING_DIRECTORY
      - setup_remote_docker
      - run:
          name: Deploy base Docker image
          environment:
            MYTAG: 0.2
            DOCKER_REPO: redbeard28/base-devspace
          command: |
            TOKEN=$( curl -sSLd "username=${DOCKERHUB_USER}&password=${DOCKERHUB_PASSWORD}" https://hub.docker.com/v2/users/login | jq -r ".token" )
            STATUS=$( curl -sH "Authorization: JWT $TOKEN" "https://hub.docker.com/v2/repositories/${DOCKER_REPO}/tags/${MYTAG}/" | jq -r ".tag_status" )
            echo $STATUS
            if [ $STATUS == "active" ]; then
              
              echo "#######@ NOTHING TO DO #####"
              exit 0
            else if [ -z $STATUS]
              if [ "${CIRCLE_BRANCH}" == "main" ]; then
                echo $DOCKERHUB_PASSWORD | docker login -u ${DOCKERHUB_USER} --password-stdin
                docker push ${DOCKER_REPO}:$MYTAG
              fi
            fi
############ END base WORKSPACE ###############
#
############ codeserver WORKSPACE ###############
  build_codeserver:
    working_directory: ~/codeserver-workspace
    docker:
      - image: cimg/base:2022.11
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout:
          path: $CIRCLE_WORKING_DIRECTORY
      - setup_remote_docker
      - run:
          name: Build application Docker image
          environment:
            MYTAG: 0.2
            DOCKER_REPO: redbeard28/codeserver-workspace
          command: |
            TOKEN=$( curl -sSLd "username=${DOCKERHUB_USER}&password=${DOCKERHUB_PASSWORD}" https://hub.docker.com/v2/users/login | jq -r ".token" )
            STATUS=$( curl -sH "Authorization: JWT $TOKEN" "https://hub.docker.com/v2/repositories/${DOCKER_REPO}/tags/${MYTAG}/" | jq -r ".tag_status" )
            echo $STATUS
            if [ $STATUS == "active" ]; then
              
              echo "#######@ NOTHING TO DO #####"
              exit 0
            else if [ -z $STATUS]
              if [ "${CIRCLE_BRANCH}" == "main" ]; then
                cd $CIRCLE_WORKING_DIRECTORY
                docker build -t ${DOCKER_REPO}:$MYTAG .
              fi
            fi
#
#
  deploy_codeserver:
    working_directory: ~/codeserver-workspace
    docker:
      - image: cimg/base:2022.11
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout:
          path: $CIRCLE_WORKING_DIRECTORY
      - setup_remote_docker
      - run:
          name: Deploy application Docker image
          environment:
            MYTAG: 0.2
            DOCKER_REPO: redbeard28/codeserver-workspace
          command: |
            TOKEN=$( curl -sSLd "username=${DOCKERHUB_USER}&password=${DOCKERHUB_PASSWORD}" https://hub.docker.com/v2/users/login | jq -r ".token" )
            STATUS=$( curl -sH "Authorization: JWT $TOKEN" "https://hub.docker.com/v2/repositories/${DOCKER_REPO}/tags/${MYTAG}/" | jq -r ".tag_status" )
            echo $STATUS
            if [ $STATUS == "active" ]; then
              
              echo "#######@ NOTHING TO DO #####"
              exit 0
            else if [ -z $STATUS]
              if [ "${CIRCLE_BRANCH}" == "main" ]; then
                echo $DOCKERHUB_PASSWORD | docker login -u ${DOCKERHUB_USER} --password-stdin
                docker push ${DOCKER_REPO}:$MYTAG
              fi
            fi
############ END codeserver WORKSPACE ###############

workflows:
  version: 2
  ############ debian WORKSPACE ###############
  build_debian_and_deploy_debian:
    jobs:
      - build_debian:
          name: build-debian-wks
          filters:
            branches:
              only: main
      - deploy_debian:
          name: deploy-debian-wks
          requires:
            - build-debian-wks
          filters:
            branches:
              only: main
  ############ END debian WORKSPACE ###############
  ############ base WORKSPACE ###############
  build_base_and_deploy_base:
    requires:
      - deploy-debian-wks
    jobs:
      - build_base:
          name: build-base-wks
          filters:
            branches:
              only: main
      - deploy_base:
          name: deploy-base-wks
          requires:
            - build-base-wks
          filters:
            branches:
              only: main
  ############ END debian WORKSPACE ###############
  ############ codeserver WORKSPACE ###############
  build_codeserver_and_deploy_codeserver:
    requires:
      - deploy-base-wks
    jobs:
      - build_codeserver:
          filters:
            branches:
              only: main
      - deploy_codeserver:
          requires:
            - build_codeserver
          filters:
            branches:
              only: main
  ############ END codeserver WORKSPACE ###############
